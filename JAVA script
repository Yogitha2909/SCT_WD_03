let board = ['', '', '', '', '', '', '', '', ''];
let currentPlayer = 'X';
let isGameOver = false;

const boardElement = document.getElementById('board');
const statusElement = document.getElementById('status');

function drawBoard() {
  boardElement.innerHTML = '';
  board.forEach((cell, i) => {
    const cellElement = document.createElement('div');
    cellElement.classList.add('cell');
    cellElement.innerText = cell;
    cellElement.addEventListener('click', () => makeMove(i));
    boardElement.appendChild(cellElement);
  });
}

function makeMove(index) {
  if (board[index] !== '' || isGameOver) return;
  board[index] = currentPlayer;
  drawBoard();
  if (checkWinner()) {
    statusElement.innerText = `Player ${currentPlayer} wins!`;
    isGameOver = true;
  } else if (board.every(cell => cell !== '')) {
    statusElement.innerText = "It's a draw!";
    isGameOver = true;
  } else {
    currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
    statusElement.innerText = `Player ${currentPlayer}'s turn`;
  }
}

function checkWinner() {
  const winPatterns = [
    [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows
    [0, 3, 6], [1, 4, 7], [2, 5, 8], // Cols
    [0, 4, 8], [2, 4, 6]             // Diagonals
  ];

  return winPatterns.some(pattern => {
    const [a, b, c] = pattern;
    return board[a] && board[a] === board[b] && board[a] === board[c];
  });
}

function restartGame() {
  board = ['', '', '', '', '', '', '', '', ''];
  currentPlayer = 'X';
  isGameOver = false;
  statusElement.innerText = `Player X's turn`;
  drawBoard();
}

drawBoard();
